name: Application Release Branch Preparation

run-name: Application Release Branch Preparation${{ inputs.dispatch_id != '' && format(' [{0}]', inputs.dispatch_id) || '' }}

on:
  workflow_dispatch:
    inputs:
      previous_release_branch:
        description: 'Previous release branch (e.g., R1-2024)'
        required: true
        type: string
      new_release_branch:
        description: 'New release branch (e.g., R2-2024)'
        required: true
        type: string
      use_snapshot_fallback:
        description: 'Use snapshot branch as fallback if previous release branch not found'
        required: false
        type: boolean
        default: false
      use_snapshot_version:
        description: 'Use snapshot version as a base version'
        required: false
        type: boolean
        default: false
      dry_run:
        description: 'Perform dry run without making changes'
        required: false
        type: boolean
        default: false        
      dispatch_id:
        description: 'Unique identifier for this workflow dispatch'
        required: false
        type: string
        default: ''

permissions:
  contents: write

jobs:
  prepare-app-release:
    name: Prepare Application Release
    uses: folio-org/kitfox-github/.github/workflows/app-release-preparation.yml@RANCHER-2523-test
    with:
      app_name: ${{ github.event.repository.name }}
      repo: ${{ github.repository }}
      previous_release_branch: ${{ inputs.previous_release_branch }}
      new_release_branch: ${{ inputs.new_release_branch }}
      use_snapshot_fallback: ${{ inputs.use_snapshot_fallback }}
      use_snapshot_version: ${{ inputs.use_snapshot_version }}
      dry_run: ${{ inputs.dry_run }}      
    secrets: inherit

    
  workflow-summary:
    name: Workflow Summary
    runs-on: ubuntu-latest
    needs: prepare-app-release
    if: always()
    steps:
      - name: Post workflow summary
        if: always()
        run: |
          {
            echo "## 🎯 ${{ github.event.repository.name }} Release Preparation Summary"
            echo ""
            echo "### 📋 Release Information"
            echo "- **Previous Release**: ${{ inputs.previous_release_branch }}"
            echo "- **New Release**: ${{ inputs.new_release_branch }}"
            echo "- **Source Branch**: ${{ needs.prepare-app-release.outputs.source_branch || 'N/A' }}"
            echo "- **Triggered by**: ${{ github.actor }}"
            echo ""
            
            if [[ "${{ needs.prepare-app-release.result }}" == "success" ]]; then
              echo "### ✅ Release Preparation Successful"
              echo "- **New Version**: ${{ needs.prepare-app-release.outputs.app_version }}"
              echo "- **Commit SHA**: \`${{ needs.prepare-app-release.outputs.commit_sha }}\`"
              echo "- **Branch Created**: ${{ inputs.new_release_branch }}"
            elif [[ "${{ needs.prepare-app-release.result }}" == "skipped" ]]; then
              echo "### ⏭️ Release Preparation Skipped"
              echo "The workflow was skipped, likely due to a dry run or conditional logic."
            else
              echo "### ❌ Release Preparation Failed"
              echo "Check the job logs for detailed error information."
              echo ""
              echo "### 🔧 Troubleshooting"
              echo "- Verify the previous release branch exists"
              echo "- Check that the new release branch name is unique"
              echo "- Ensure you have necessary permissions"
            fi
            
            if [[ "${{ inputs.dry_run }}" == "true" ]]; then
              echo ""
              echo "### 🏃 Dry Run Mode"
              echo "This was a dry run - no actual changes were made."
              echo "Set \`dry_run=false\` to apply changes."
            fi
            
            echo ""
            echo "---"
            echo "*Generated by ${{ github.workflow }} at $(date -u +'%Y-%m-%d %H:%M:%S UTC')*"
          } >> $GITHUB_STEP_SUMMARY
          
  slack_notification:
    name: Slack Notification
    needs: prepare-app-release
    if: always() && inputs.dry_run == false && vars.SLACK_NOTIF_CHANNEL != ''
    uses: folio-org/kitfox-github/.github/workflows/app-release-preparation-notification.yml@master
    with:
      app_name: ${{ github.repository }}
      new_release_branch: ${{ inputs.new_release_branch }}
      source_branch: ${{ needs.prepare-app-release.outputs.source_branch }}
      app_version: ${{ needs.prepare-app-release.outputs.app_version }}
      commit_sha: ${{ needs.prepare-app-release.outputs.commit_sha }}
      workflow_result: ${{ needs.prepare-app-release.result }}
      workflow_run_id: ${{ github.run_id }}
      workflow_run_number: ${{ github.run_number }}
      slack_notif_channel: ${{ vars.GENERAL_SLACK_NOTIF_CHANNEL }} # ${{ vars.SLACK_NOTIF_CHANNEL }}
    secrets: inherit
