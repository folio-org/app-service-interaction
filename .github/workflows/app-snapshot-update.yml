name: Update Snapshot Application

run-name: Update Snapshot Application ${{ github.event_name == 'schedule' && '[scheduled]' || '' }}

on:
  schedule:
    - cron: "*/20 * * * *"

  workflow_dispatch:
    inputs:
      descriptor_build_offset:
        description: 'Offset to apply to application artifact version'
        required: false
        type: string
        default: '100100000000000'
      rely_on_FAR:
        description: 'Whether to rely on FAR for application descriptor dependencies'
        required: false
        type: boolean
        default: false
      dry_run:
        description: 'Perform dry run without making changes'
        required: false
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

permissions:
  contents: write

jobs:
  fetch-platform-descriptor:
    name: Fetch Platform Descriptor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Platform Repository
        if: ${{ !(github.event_name == 'workflow_dispatch' && inputs.rely_on_FAR) }}
        uses: actions/checkout@v4
        with:
          repository: folio-org/platform-lsp
          ref: snapshot
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Platform Descriptor
        if: ${{ !(github.event_name == 'workflow_dispatch' && inputs.rely_on_FAR) }}
        uses: actions/upload-artifact@v4
        with:
          name: platform-descriptor
          path: platform-descriptor.json
          retention-days: 1

  update-application:
    name: Update Application
    needs: fetch-platform-descriptor
    uses: folio-org/kitfox-github/.github/workflows/app-update.yml@master
    with:
      app_name: ${{ github.event.repository.name }}
      repo: ${{ github.repository }}
      workflow_run_number: ${{ github.run_number }}
      descriptor_build_offset: ${{ github.event_name == 'workflow_dispatch' && inputs.descriptor_build_offset || '100100000000000' }}
      rely_on_FAR: ${{ github.event_name == 'workflow_dispatch' && inputs.rely_on_FAR || false }}
      dry_run: ${{ github.event_name == 'workflow_dispatch' && inputs.dry_run || false }}
    secrets: inherit

  workflow-summary:
    name: Workflow Summary
    runs-on: ubuntu-latest
    needs: update-application
    if: always()
    steps:
      - name: Post workflow summary
        if: always()
        run: |
          {
            echo "## 🎯 ${{ github.event.repository.name }} Snapshot Update Summary"
            echo ""
            echo "### 📋 Update Information"
            echo "- **Branch**: snapshot"
            echo "- **Run Number**: ${{ github.run_number }}"
            echo "- **Triggered by**: ${{ github.actor }}"
            echo "- **Event**: ${{ github.event_name == 'schedule' && 'Scheduled' || 'Manual' }}"
            echo ""
            
            if [[ "${{ github.event_name == 'workflow_dispatch' && inputs.dry_run }}" == "true" ]]; then
              echo "### 🏃 Dry Run Mode"
              echo ""
              echo "This was a dry run - no actual changes were made."
              echo "- Module updates were checked but not committed"
              echo "- Application descriptor was generated but not pushed"
              echo ""
              echo "Set \`dry_run=false\` to apply changes."
              echo ""
            elif [[ "${{ needs.update-application.result }}" == "success" ]]; then
              if [[ "${{ needs.update-application.outputs.updated }}" == "true" ]]; then
                echo "### ✅ Modules Updated Successfully"
                echo "- **Previous Version**: ${{ needs.update-application.outputs.previous_version }}"
                echo "- **New Version**: ${{ needs.update-application.outputs.new_version }}"
                echo "- **Updated Modules Count**: ${{ needs.update-application.outputs.updated_cnt }}"
                echo "- **Commit SHA**: \`${{ needs.update-application.outputs.commit_sha }}\`"
                echo ""
                echo "### 📦 Updated Modules"
                echo "\`\`\`"
                echo "${{ needs.update-application.outputs.updated_modules }}"
                echo "\`\`\`"
              else
                echo "### ✨ No Updates Available"
                echo "All modules are up to date."
                echo "- **Current Version**: ${{ needs.update-application.outputs.previous_version }}"
              fi
            elif [[ "${{ needs.update-application.result }}" == "skipped" ]]; then
              echo "### ⏭️ Update Skipped"
              echo "The update was skipped, likely due to dry run mode or conditional logic."
            else
              echo "### ❌ Update Failed"
              echo "The update process encountered an error."
              echo ""
              if [[ -n "${{ needs.update-application.outputs.failure_reason }}" ]]; then
                echo "### 📝 Failure Reason"
                echo "${{ needs.update-application.outputs.failure_reason }}"
                echo ""
              fi
              echo "### 🔧 Troubleshooting"
              echo "- Check the job logs for detailed error information"
              echo "- Verify module registry accessibility"
              echo "- Ensure proper permissions for repository updates"
            fi
            
            echo ""
            echo "---"
            echo "*Generated by ${{ github.workflow }} at $(date -u +'%Y-%m-%d %H:%M:%S UTC')*"
          } >> $GITHUB_STEP_SUMMARY

  slack_notification:
    name: Slack Notification ${{ matrix.channel }}
    needs: update-application
    strategy:
      matrix:
        channel: ${{ fromJSON(
          vars.SLACK_NOTIF_CHANNEL != '' && format('["{0}","{1}"]', vars.GENERAL_SLACK_NOTIF_CHANNEL, vars.SLACK_NOTIF_CHANNEL)
          || format('["{0}"]', vars.GENERAL_SLACK_NOTIF_CHANNEL)
          || '[]'
          ) }}
    if: >
      always() &&
      !(github.event_name == 'workflow_dispatch' && inputs.dry_run) &&
      (
        needs.update-application.result != 'success' ||
        (needs.update-application.result == 'success' && needs.update-application.outputs.updated == 'true')
      )
    uses: folio-org/kitfox-github/.github/workflows/app-update-notification.yml@master
    with:
      app_name: ${{ github.event.repository.name }}
      repo: ${{ github.repository }}
      new_version: ${{ needs.update-application.outputs.new_version }}
      previous_version: ${{ needs.update-application.outputs.previous_version }}
      updated_cnt: ${{ needs.update-application.outputs.updated_cnt }}
      updated_modules: ${{ needs.update-application.outputs.updated_modules }}
      failure_reason: ${{ needs.update-application.outputs.failure_reason }}
      commit_sha: ${{ needs.update-application.outputs.commit_sha }}
      app_descriptor_file_name: ${{ needs.update-application.outputs.app_descriptor_file_name }}
      app_descriptor_url: ${{ needs.update-application.outputs.app_descriptor_url }}
      workflow_result: ${{ needs.update-application.result }}
      workflow_run_id: ${{ github.run_id }}
      workflow_run_number: ${{ github.run_number }}
      slack_notif_channel: ${{ matrix.channel }}
    secrets: inherit
